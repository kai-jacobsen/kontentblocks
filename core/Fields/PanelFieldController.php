<?php

namespace Kontentblocks\Fields;

use Kontentblocks\Panels\AbstractPanel;


/**
 * FieldManagerPanels
 * Use ReFields outside of module context
 * WIP
 */
class PanelFieldController extends AbstractFieldController
{

    /**
     * Array of Field groups
     * @var array
     */
    public $structure = array();

    /**
     * Unique ID from module
     * Used to prefix form fields
     * @var string
     */
    protected $baseId;
    /**
     *
     * @var AbstractPanel
     */
    protected $panel;

    /**
     * Constructor
     *
     * @param $baseId
     * @param array $data
     * @param $panel
     */
    public function __construct( $baseId, $data = array(), AbstractPanel $panel )
    {
        $this->baseId = $baseId;
        $this->data = $data;
        $this->panel = $panel;

    }



    /**
     * Creates a new section if there is not an exisiting one
     * or returns the section
     *
     * @param string $sectionId
     * @param array $args
     *
     * @return object groupobject
     */
    public function addSection( $sectionId, $args = array() )
    {
        if (!$this->idExists( $sectionId )) {
            $this->structure[$sectionId] = new PanelFieldSection( $sectionId, $args, $this->panel );
        }
        return $this->structure[$sectionId];
    }

    /**
     * Calls save on each group
     *
     * @param $data
     * @param $oldData
     *
     * @return array
     * @since 0.1.0
     */
    public function save( $data, $oldData )
    {
        $collection = array();
        /** @var \Kontentblocks\Fields\AbstractFieldSection $section */
        foreach ($this->structure as $section) {
            $return = ( $section->save( $data, $oldData ) );
            $collection = $collection + $return;
        }
        return $collection;

    }

    /**
     * Backend render method | Endpoint
     * output gets generated by attached render object
     * defaults to tabs
     * called by Kontentblocks\Modules\Module::options()
     * if not overridden by extending class
     * @see Kontentblocks\Modules\Module::form
     * @return string
     */
    public function renderFields()
    {
        $renderer = new FieldRendererTabs( $this->baseId, $this->structure );
        return $renderer->render( $this->data );
    }


    /**
     * internal
     * @return bool
     */
    public function isPublic()
    {
        return false;
    }

}
